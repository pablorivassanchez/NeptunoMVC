// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Neptuno.Data;

namespace Neptuno.Data.Migrations
{
    [DbContext(typeof(NeptunoContext))]
    [Migration("20180606053551_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Neptuno.Data.EFEntities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("IdCategoria");

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("Descripcion");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Neptuno.Data.EFEntities.Cliente", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("IdCliente")
                        .HasMaxLength(5);

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("CargoContacto")
                        .HasMaxLength(30);

                    b.Property<string>("Ciudad")
                        .HasMaxLength(15);

                    b.Property<string>("CodPostal")
                        .HasMaxLength(10);

                    b.Property<string>("Direccion")
                        .HasMaxLength(60);

                    b.Property<string>("Fax")
                        .HasMaxLength(24);

                    b.Property<string>("NombreCompania")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("NombreContacto")
                        .HasMaxLength(30);

                    b.Property<string>("Pais")
                        .HasMaxLength(15);

                    b.Property<string>("Region")
                        .HasMaxLength(15);

                    b.Property<string>("Telefono")
                        .HasMaxLength(24);

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Neptuno.Data.EFEntities.CompaniaEnvio", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("IdCompaniaEnvio");

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("NombreCompania")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Telefono")
                        .HasMaxLength(24);

                    b.HasKey("Id");

                    b.ToTable("CompaniaEnvio");
                });

            modelBuilder.Entity("Neptuno.Data.EFEntities.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("IdEmpleado");

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Cargo")
                        .HasMaxLength(30);

                    b.Property<string>("Ciudad")
                        .HasMaxLength(15);

                    b.Property<string>("CodPostal")
                        .HasMaxLength(10);

                    b.Property<string>("Direccion")
                        .HasMaxLength(60);

                    b.Property<string>("Extension")
                        .HasMaxLength(4);

                    b.Property<DateTime?>("FechaContratacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime");

                    b.Property<string>("Foto")
                        .HasMaxLength(255);

                    b.Property<int?>("Jefe");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Notas");

                    b.Property<string>("Pais")
                        .HasMaxLength(15);

                    b.Property<string>("Region")
                        .HasMaxLength(15);

                    b.Property<string>("TelDomicilio")
                        .HasMaxLength(24);

                    b.Property<string>("Tratamiento")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("Neptuno.Data.EFEntities.LineaPedido", b =>
                {
                    b.Property<int>("IdPedido");

                    b.Property<int>("IdProducto");

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<short>("Cantidad");

                    b.Property<float>("Descuento");

                    b.Property<decimal>("PrecioUnidad")
                        .HasColumnType("money");

                    b.HasKey("IdPedido", "IdProducto");

                    b.HasIndex("IdProducto");

                    b.ToTable("LineaPedido");
                });

            modelBuilder.Entity("Neptuno.Data.EFEntities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("IdPedido");

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<decimal?>("Cargo")
                        .HasColumnType("money");

                    b.Property<string>("CiudadDestinatario")
                        .HasMaxLength(15);

                    b.Property<string>("CodPostalDestinatario")
                        .HasMaxLength(10);

                    b.Property<string>("Destinatario")
                        .HasMaxLength(40);

                    b.Property<string>("DireccionDestinatario")
                        .HasMaxLength(60);

                    b.Property<DateTime?>("FechaEntrega")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaEnvio")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaPedido")
                        .HasColumnType("datetime");

                    b.Property<int?>("FormaEnvio");

                    b.Property<string>("IdCliente")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int?>("IdEmpleado");

                    b.Property<string>("PaisDestinatario")
                        .HasMaxLength(15);

                    b.Property<string>("RegionDestinatario")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.HasIndex("FormaEnvio");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("Neptuno.Data.EFEntities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("IdProducto");

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("CantidadPorUnidad")
                        .HasMaxLength(20);

                    b.Property<int?>("IdCategoria");

                    b.Property<int?>("IdProveedor");

                    b.Property<int?>("NivelNuevoPedido");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<decimal?>("PrecioUnidad")
                        .HasColumnType("money");

                    b.Property<bool>("Suspendido");

                    b.Property<short?>("UnidadesEnExistencia");

                    b.Property<short?>("UnidadesEnPedido");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Neptuno.Data.EFEntities.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("IdProveedor");

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("CargoContacto")
                        .HasMaxLength(30);

                    b.Property<string>("Ciudad")
                        .HasMaxLength(15);

                    b.Property<string>("CodPostal")
                        .HasMaxLength(10);

                    b.Property<string>("Direccion")
                        .HasMaxLength(60);

                    b.Property<string>("Fax")
                        .HasMaxLength(24);

                    b.Property<string>("NombreCompania")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("NombreContacto")
                        .HasMaxLength(30);

                    b.Property<string>("PaginaPrincipal");

                    b.Property<string>("Pais")
                        .HasMaxLength(15);

                    b.Property<string>("Region")
                        .HasMaxLength(15);

                    b.Property<string>("Telefono")
                        .HasMaxLength(24);

                    b.HasKey("Id");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("Neptuno.Data.EFEntities.LineaPedido", b =>
                {
                    b.HasOne("Neptuno.Data.EFEntities.Pedido", "IdPedidoNavigation")
                        .WithMany("LineaPedido")
                        .HasForeignKey("IdPedido")
                        .HasConstraintName("FK_LineaPedido_Pedido");

                    b.HasOne("Neptuno.Data.EFEntities.Producto", "IdProductoNavigation")
                        .WithMany("LineaPedido")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_LineaPedido_Producto");
                });

            modelBuilder.Entity("Neptuno.Data.EFEntities.Pedido", b =>
                {
                    b.HasOne("Neptuno.Data.EFEntities.CompaniaEnvio", "FormaEnvioNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("FormaEnvio")
                        .HasConstraintName("FK_Pedido_CompaniaEnvio");

                    b.HasOne("Neptuno.Data.EFEntities.Cliente", "IdClienteNavigation")
                        .WithMany("Pedido")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK_Pedido_Cliente");

                    b.HasOne("Neptuno.Data.EFEntities.Empleado", "IdEmpleadoNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdEmpleado")
                        .HasConstraintName("FK_Pedido_Empleado");
                });

            modelBuilder.Entity("Neptuno.Data.EFEntities.Producto", b =>
                {
                    b.HasOne("Neptuno.Data.EFEntities.Categoria", "IdCategoriaNavigation")
                        .WithMany("Producto")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK_Producto_Categoria");

                    b.HasOne("Neptuno.Data.EFEntities.Proveedor", "IdProveedorNavigation")
                        .WithMany("Producto")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK_Producto_Proveedor");
                });
#pragma warning restore 612, 618
        }
    }
}
